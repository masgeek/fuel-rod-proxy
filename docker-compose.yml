version: '3'

services:
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    environment:
      DOZZLE_TAILSIZE: 200
      LOGSENE_ENABLED: "false"
    networks:
      - web
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

#  site:
#    build: ./flask_app
#    container_name: site
#    image: app:latest
#    restart: always
#    ports:
#      - 5000:5000
#    networks:
#      - web
#      - internal
#    environment:
#      APP_NAME: "Welcome to tsobu api"

  fuelrod:
    container_name: fuelrod
    image: app:latest
    restart: always
    ports:
      - 5000:5000
    environment:
      APP_NAME: "Welcome to tsobu api"

  db:
    container_name: db
    image: mysql:8.0.20
    volumes:
      - ${PWD}/mysql-init-files:/docker-entrypoint-initdb.d
      - ${PWD}/db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      REMOTE_SQL: ${PWD}/mysql-init-files/init.sql
    networks:
      - internal

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - web
      - internal
    ports:
      - 80:80
      - 443:443
    links:
      - fuelrod:fuelrod
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  data:

networks:
  internal:
    external: false
  web:
    external: true
