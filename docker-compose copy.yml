version: '3.3'

services:
  db:
    container_name: db
    image: mysql:8.0.20
    command: mysqld --sql_mode=""
    volumes:
      - ${PWD}/mysql-init-files:/docker-entrypoint-initdb.d
      - ${PWD}/db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      REMOTE_SQL: ${PWD}/mysql-init-files/init.sql
    networks:
      - internal

  adminer:
    container_name: adminer
    image: adminer
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_NAME: ${DATABASE}
      ADMINER_DESIGN: ${THEME}
      ADMINER_PLUGINS: ${PLUGINS}
    restart: on-failure
    links:
      - db:mysql
    ports:
      - 9080:8080
    networks:
      - web
      - internal
    depends_on:
      - db
         
  zookeeper:
    container_name: zookeper
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      DEBUG: "true"
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_SERVER_ID: 1
      ZOO_CLIENT_PORT: 2181
      # ZOO_TICK_TIME: 2000
      # ZOO_INIT_LIMIT: 5
      # ZOO_SYNC_LIMIT: 2
    networks:
    - web
    - internal
    volumes:
    - ./zookeeper:/bitnami/zookeeper

  kafka:
    image: wurstmeister/kafka
    #    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CLUSTER_ID: 1
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_CREATE_TOPICS}
      KAFKA_CREATE_TOPICS: ${KAFKA_TOPICS}
      KAFKA_LOG_DIRS:  ${KAFKA_LOG_DIRS}
    networks:
      - web
      - internal
    depends_on:
      - zookeeper
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka:/kafka

  fuelrod:
    container_name: fuelrod
    image: tsobu/fuelrod-service-api:latest
    hostname: fuelrod
    restart: always
    depends_on:
      - db
    networks:
      - web
      - internal
    ports:
      - 9000:9000
    volumes:
      - ${PWD}/log:/log
    environment:
      - DEBUG=${DEBUG}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DEMO_MODE=${DEMO_MODE}
      - VERIFY_CERT=${VERIFY_CERT}
      - WEBHOOK=${WEBHOOK}
      - SERVICE=${SERVICE}
      - OPT_OUT_CODE=${OPT_OUT_CODE}
      - TEST_NUMBERS=${TEST_NUMBERS}
      - AT_ENDPOINT=${AT_ENDPOINT}
      - AT_AUTH_KEY=${AT_AUTH_KEY}
      - AT_USER_NAME=${AT_USER_NAME}
      - AT_DEFAULT_SENDER=${AT_DEFAULT_SENDER}
      - MS_ENDPOINT=${MS_ENDPOINT}
      - MS_USER_NAME=${MS_USER_NAME}
      - MS_AUTH_KEY=${MS_AUTH_KEY}
      - MS_DEFAULT_SENDER=${MS_DEFAULT_SENDER}
      - UPLOADS_DIR=${UPLOADS_DIR}
      - RATE_TYPE=${RATE_TYPE}
      - ENABLE_RATE_LIMIT=${ENABLE_RATE_LIMIT}
      - RATE_LIMIT=${RATE_LIMIT}
      - KAFKA_CONSUMER_SERVER=${KAFKA_CONSUMER_SERVER}
  
  fuelrod-batch:
    container_name: fuelrod-batch
    image: tsobu/fuelrod-service-jobs:${BATCH_VERSION}
    restart: on-failure
    depends_on:
      - db
    ports:
      - 9001:9001
    volumes:
      - ${PWD}/log:/log
    environment:
      - DEBUG={$DEBUG}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - BATCH_CRON=${BATCH_CRON}
      - KAFKA_PRODUCER_SERVER=${KAFKA_PRODUCER_SERVER}
    networks:
      - internal  
  
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    environment:
      DOZZLE_TAILSIZE: 300
    networks:
      - web
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
networks:
  internal:
    external: false
  web:
    external: true
