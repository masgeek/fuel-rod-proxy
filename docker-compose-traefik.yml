version: '3.3'

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - web
      - internal
    ports:
      - 80:80
      - 443:443
    links:
      - site:site
      - fuelrod:fuelrod
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - web
      - internal
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  db:
    container_name: db
    image: mysql:5.7
    volumes:
      - ${PWD}/mysql-init-files:/docker-entrypoint-initdb.d
      - ${PWD}/db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      LOGSENE_ENABLED: "false"
      REMOTE_SQL: ${PWD}/mysql-init-files/init.sql
    networks:
      - internal

  adminer:
    container_name: adminer
    image: adminer
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_NAME: ${DATABASE}
      ADMINER_DESIGN: nette
      ADMINER_PLUGINS: tables-filter tinymce
      LOGSENE_ENABLED: "false"
    restart: on-failure
    links:
      - db:mysql
    ports:
      - 9080:8080
    networks:
      - web
      - internal
    depends_on:
      - db

  site:
    build: ./flask_app
    container_name: site
    image: app:latest
    restart: always
    ports:
      - 5000:5000
    networks:
      - web
      - internal
    environment:
      APP_NAME: "Welcome to tsobu api"

  fuelrod:
    container_name: fuelrod
    image: tsobu/fuelrod-api:latest
    restart: always
    depends_on:
      - db
    ports:
      - 9000:9000
    volumes:
      - ${PWD}/log:/log
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - AT_AUTH_KEY=${AT_AUTH_KEY}
      - AT_USER_NAME=${AT_USER_NAME}
      - DEMO_MODE=${DEMO_MODE}
      - VERIFY_CERT=${VERIFY_CERT}
      - MS_WEBHOOK=${MS_WEBHOOK}
      - SMS_SERVICE=${SMS_SERVICE}
    networks:
      - web
      - internal

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    environment:
      DOZZLE_TAILSIZE: 500
      LOGSENE_ENABLED: "false"
    networks:
      - web
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

  logagent:
    container_name: logagent
    image: sematext/logagent:latest
    environment:
      - LOGS_TOKEN=${YOUR_LOGS_TOKEN}
      - LOG_GLOB=${LOG_GLOB}
      - REGION=${REGION}
      - LOGS_RECEIVER_URL=${LOGS_RECEIVER_URL}
    cap_add:
      - SYS_ADMIN
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

networks:
  internal:
    external: false
  web:
    external: true
